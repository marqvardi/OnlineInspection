@using OnlineInspection.WebUI.Models

@model ProductListViewModel

@{
    ViewBag.Title = "ProductList";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2 style="text-align:center">Product List</h2>




@foreach (var item in Model.Products)
{
    <div class="card mb-6 border-dark mb-3" style="max-width: 1240px; margin: auto  ">
        <div class="card-header">
            <h4>
                Product Code: <span>  @Html.ActionLink(item.ProductCode, "EditProduct", "Admin", new { item.ProductId }, null)</span>
                <span class="badge badge-secondary float-md-right"> @item.Price.ToString("C", Cultures.USA) </span>  <a class="float-md-right"> Price: </a>
            </h4>
        </div>
        <div class="row no-gutters">
            <div class="col-md-4">
                <img src="@Url.Content("~/IMG/" + item.Image)" height="300" width="300" class="card-img" alt="...">
            </div>
            <div class="col-md-8">
                <div class="card-body">
                    <div class="d-inline-flex p-2 bd-highlight">


                        <p>@item.Description</p>
                    </div>

                    @*<span class="float-md-right" >@Html.CheckBoxFor(model => item.Active) Active</span>*@

                    <hr />
                    <div class="justify-content-between" style="font-size:20px">
                        <label class="d-flex justify ">Carton details</label>
                        <span class="badge badge-pill badge-primary">Height: @item.CartonHeight CM</span>
                        <span class="badge badge-pill badge-primary">Width: @item.CartonWidth CM</span>
                        <span class="badge badge-pill badge-primary">Deepness: @item.CartonDeep CM</span>
                        <span class="badge badge-pill badge-success">Qty per carton: @item.QtyPerCarton PCS</span>
                        <span class="badge badge-pill badge-info">Gross weight: @item.Grosskgs Kgs</span>
                        <span class="badge badge-pill badge-info">Net weight: @item.NetKgs Kgs</span>
                    </div>
                    <hr />
                </div>
            </div>
        </div>
    </div>
}

<div class="card-footer  ">
    @Html.ActionLink("Add a new product", "CreateProduct", "Admin", null, new { @class = "btn btn-outline-dark" })
    <span class="pagination justify-content-center">
        @Html.PageLinks(Model.pagingInfo, x => Url.Action("ProductList", new { page = x }))
    </span>

</div>
