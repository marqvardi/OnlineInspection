@model OnlineInspection.Domain.Entities.Product

@{
    ViewBag.Title = "Editing";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2 style="text-align:center">Editing product @Model.ProductCode</h2>

<br />
<br />

@using (Html.BeginForm("EditProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ProductId)
    <div class="card mb-10 border-dark mb-3" style="max-width: 1240px; margin: auto  ">
        <div class="card-header">
            <div>
                Product Code:
                @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control", @style = "width:200px" } })
                @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })

                <span class="badge badge-secondary float-md-right">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </span>  <a class="float-md-right">Price:</a>
            </div>
        </div>

        <div class="row no-gutters">
            <div class="col-md-4">
                <img src="@Url.Content("~/IMG/" + Model.Image)" height="300" width="300" class="card-img" alt="...">
            </div>
            <div class="col-md-8">
                <div class="card-body">
                    <div class="d-inline-flex p-2 bd-highlight">
                        <h4>  Description</h4>
                        <span>
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @style = "width:500px" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </span>
                    </div>

                    <span class="float-md-right">
                        @*<input type="checkbox" onclick="return false" readonly="readonly" />*@
                        @Html.EditorFor(model => model.Active)
                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                        Active
                    </span>

                    <hr />
                    <div class="justify-content-between" style="font-size:20px">
                        <label class="d-flex justify ">Carton details</label>
                        <span class="badge badge-pill badge-primary">
                            Height:
                            @Html.EditorFor(model => model.CartonHeight, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CartonHeight, "", new { @class = "text-danger" })CM
                        </span>
                        <span class="badge badge-pill badge-primary">
                            Width:
                            @Html.EditorFor(model => model.CartonWidth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CartonWidth, "", new { @class = "text-danger" }) CM
                        </span>
                        <span class="badge badge-pill badge-primary">
                            Deepness:
                            @Html.EditorFor(model => model.CartonDeep, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CartonDeep, "", new { @class = "text-danger" }) CM
                        </span>
                        <span class="badge badge-pill badge-success">
                            Qty per carton:
                            @Html.EditorFor(model => model.QtyPerCarton, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.QtyPerCarton, "", new { @class = "text-danger" }) PCS
                        </span>
                        <span class="badge badge-pill badge-info">
                            Gross weight:
                            @Html.EditorFor(model => model.Grosskgs, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Grosskgs, "", new { @class = "text-danger" }) Kgs
                        </span>
                        <span class="badge badge-pill badge-info">
                            Net weight:
                            @Html.EditorFor(model => model.NetKgs, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NetKgs, "", new { @class = "text-danger" }) Kgs
                        </span>
                    </div>
                    <hr />
                    <div class="form-group ">
                        <div class="fileUpload btn btn-default">
                            <input id="uploadBtn" type="file" class="upload" multiple="multiple" name="imagem" />
                        </div>
                        <div id="upload_prev"></div>
                        <div style="clear:both;"></div>
                        @*@Html.TextBoxFor(x => x.Image, new { @type = "file", @id = "imageupload", @accept = "image/*", @class = "form-control", @placeholder = "Image" })*@
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group float-md-right">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-outline-dark" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>




    @*<div class="form-group">

            <div class="form-horizontal col-md-6" style="margin:auto">
                <h4>Product</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ProductId)

                <div class="container">
                    <div class="row">
                        <div class="col-md-4">
                            <img src="@Url.Content("~/img/" + Model.Image)" height="250" width="250" />
                        </div>

                        <div class="col-md-8">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="fileUpload btn btn-default">
                                    <input id="uploadBtn" type="file" class="upload" multiple="multiple" name="imagem" />
                                </div>
                                <div id="upload_prev"></div>
                                <div style="clear:both;"></div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10 d-flex flex-row-reverse">
                                    <input type="submit" value="Save" class="btn btn-outline-dark" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@
}

<div class="form-horizontal col-md-6" style="margin:auto">
    @Html.ActionLink("Back to List", "ProductList", "Product")
</div>

